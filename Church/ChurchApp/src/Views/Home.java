/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import javax.swing.BoxLayout;
import javax.swing.JMenuItem;
import javax.swing.JPanel;


/**
 *
 * @author dtame
 */ 
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        this.CenterFrame();
        
        JPanel contentPanel = new JPanel();
        contentPanel.setSize(0, 400);
        
        backPanel.add(contentPanel);
        
        JPanel biblePanel = new BiblePane(); //new JPanel();
        JPanel worshipPanel = new WorshipPanel(); //new JPanel();  
        JPanel announcementPanel = new AnnouncementPanel();
        
        biblePanel.setMaximumSize(new Dimension(0, 400));
        worshipPanel.setMaximumSize(new Dimension(450, 400));                        
        announcementPanel.setMaximumSize(new Dimension(450, 400)); 
        
        biblePanel.setAlignmentX(Component.LEFT_ALIGNMENT);
        worshipPanel.setAlignmentX(Component.LEFT_ALIGNMENT);
        announcementPanel.setAlignmentX(Component.LEFT_ALIGNMENT);
        
        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));
                                        
        CardLayout layout = new CardLayout();        
        contentPanel.setLayout(layout);
        contentPanel.add("biblePanel", biblePanel);
        contentPanel.add("worshipPanel", worshipPanel);   
        contentPanel.add("announcementPanel", announcementPanel);   
        
        JMenuItem openBibleMenuItem = new JMenuItem("Open");
        openBibleMenuItem.addActionListener((ActionEvent e) -> {                        
            layout.show(contentPanel, "biblePanel");
        });
                
        JMenuItem openWorshipMenuItem = new JMenuItem("Open");
        openWorshipMenuItem.addActionListener((ActionEvent e) -> {           
            layout.show(contentPanel, "worshipPanel");
        });
        
        JMenuItem openAnnouncementMenuItem = new JMenuItem("Open");
        openWorshipMenuItem.addActionListener((ActionEvent e) -> {           
            layout.show(contentPanel, "announcementPanel");
        });
        
        bibleMenu.add(openBibleMenuItem);
        worshipMenu.add(openWorshipMenuItem);
        announcementMenu.add(openAnnouncementMenuItem);
    }

    private void CenterFrame(){
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backPanel = new javax.swing.JPanel();
        configurationPanel = new javax.swing.JPanel();
        displayButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        bibleMenu = new javax.swing.JMenu();
        worshipMenu = new javax.swing.JMenu();
        announcementMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Church App");

        backPanel.setBackground(new java.awt.Color(255, 255, 255));
        backPanel.setLayout(new java.awt.BorderLayout());

        configurationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Display"));

        displayButton.setText("Display");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout configurationPanelLayout = new javax.swing.GroupLayout(configurationPanel);
        configurationPanel.setLayout(configurationPanelLayout);
        configurationPanelLayout.setHorizontalGroup(
            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configurationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayButton)
                .addContainerGap(922, Short.MAX_VALUE))
        );
        configurationPanelLayout.setVerticalGroup(
            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configurationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayButton)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        backPanel.add(configurationPanel, java.awt.BorderLayout.SOUTH);

        menuBar.setBackground(new java.awt.Color(255, 255, 255));

        bibleMenu.setText("Bible");
        menuBar.add(bibleMenu);

        worshipMenu.setText("Worship");
        menuBar.add(worshipMenu);

        announcementMenu.setText("Announcement");
        menuBar.add(announcementMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    /*public static void main(String args[]) {
      
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
      
        java.awt.EventQueue.invokeLater(() -> {
            new Home().setVisible(true);
        });
    } */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu announcementMenu;
    private javax.swing.JPanel backPanel;
    private javax.swing.JMenu bibleMenu;
    private javax.swing.JPanel configurationPanel;
    private javax.swing.JButton displayButton;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu worshipMenu;
    // End of variables declaration//GEN-END:variables
}
