/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Application.ApplicationLogic;
import Application.IApplicationLogic;
import Domain.Verse;
import Persistence.Repository;
import Presentation.VerseViewModel;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author dtame
 */
public class BiblePane extends javax.swing.JPanel {
    IApplicationLogic logic = new ApplicationLogic();
    DefaultListModel bibleListModel = new DefaultListModel();
    /**
     * Creates new form BiblePane
     */
    public BiblePane() {
        initComponents();
        setMaximumSize(new Dimension(0, 400));        
        searchField.setMaximumSize(new Dimension(500, 50));
        bibleScrollPane.setPreferredSize(new Dimension(650, 400));
        buttonPanel.setPreferredSize(new Dimension(120,150));
        
        displayButton.setEnabled(false);
        saveButton.setEnabled(false);
        //buttonPanel.add(btn1);
        //buttonPanel.add(btn2);
        verseList.setModel(bibleListModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        bibleScrollPane = new javax.swing.JScrollPane();
        verseList = new javax.swing.JList<>();
        buttonPanel = new javax.swing.JPanel();
        displayButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Bible "));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
        });
        add(searchField);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        bibleScrollPane.setMaximumSize(new java.awt.Dimension(0, 0));

        bibleScrollPane.setViewportView(verseList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.2;
        jPanel1.add(bibleScrollPane, gridBagConstraints);

        buttonPanel.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonPanel.setPreferredSize(new java.awt.Dimension(70, 23));
        buttonPanel.setLayout(new java.awt.GridBagLayout());

        displayButton.setText("Display");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        buttonPanel.add(displayButton, gridBagConstraints);

        saveButton.setText("Save");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        buttonPanel.add(saveButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(buttonPanel, gridBagConstraints);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents
       
    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
            bibleListModel.removeAllElements();
            String regex = "([1-3]\\s|[1-3])?[A-Za-z]{3,20}\\s[1-9]{1,3}[:][1-9]{1,3}([-][1-9]{1,3})?";            
            if( searchField.getText().matches(regex)){
                //JOptionPane.showMessageDialog(null, "text match the regex");
                VerseViewModel searchModel = Helper.ConvertToVerse(searchField.getText());
                List<Verse> verseReceived = logic.VerseSearch(searchModel);
                if (!verseReceived.isEmpty()){                                                                                                                                                                        
                List<String> returnedVerseText = verseReceived.stream().map(x -> x.getText()).collect(Collectors.toList());                
                returnedVerseText.forEach((item) -> {
                    bibleListModel.addElement(item);
                });                
                } else{
                   JOptionPane.showMessageDialog(null, "No verse found.");
                   displayButton.setEnabled(false);
                   saveButton.setEnabled(false);
                }
            }
        }
    }//GEN-LAST:event_searchFieldKeyPressed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane bibleScrollPane;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton displayButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JList<String> verseList;
    // End of variables declaration//GEN-END:variables
}
